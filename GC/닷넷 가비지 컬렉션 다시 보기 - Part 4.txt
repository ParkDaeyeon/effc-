http://www.simpleisbest.net/post/2011/04/18/When-GC-Occurs.aspx



★ 가비지 컬렉션은 언제 발생하는가?

기본적으로 가비지 컬렉션은 다음 상황에서 발생한다고 말할 수 있다.
- 메모리 할당이 일정 임계치(threshold)를 넘어 섰을 때
- GC.Collect 메서드를 명시적으로 호출했을 때
- 시스템이 메모리 부족현상을 겪고 있을 때



★ Excessive Allocation
메모리 할당이 일정 임계치를 넘어섰을 때 가비지 컬렉션이 발생한다는 것에 대해 조금 더 상세히 이야기 하자면 이렇다.

Gen 0, Gen 1, Gen 2 각 세대별 힙과 LOH(Large Object Heap)는 각각 버짓(budget)이라 불리는 할당 임계치를 가지고 있다.
이 버짓을 초과하는 메모리 할당이 발생하면 해당 세대의 가비지 컬렉션이 발생하게 되는 것이다.  
버짓은 고정된 값이 아니라 메모리 상황에 따라서, 그리고 가비지 컬렉션이 수행됨에 따라서 지속적으로 변화되고 튜닝 되는 값이다. 

0 세대 힙과 LOH은 사용자가 직접 new 연산자나 Activator.CreateInstance 메서드 호출에 의해 객체를 생성하고 메모리를 할당하는 힙이 되겠다.
따라서 0 세대의 버짓 혹은 LOH의 버짓을 초과하는 어플리케이션의 메모리 할당은 가비지 컬렉션을 유발하게 된다. 
0 세대 버짓 소진으로는 GC 0이 발생되고 LOH의 버짓 소진은 2세대 가비지 컬렉션(full garbage collection이라고도 부른다)이 발생한다.

GC 0가 수행됨에 따라 0 세대 힙에서 살아남은 객체들은 1세대 힙으로 프로모션(promotion)되게 된다.
이 때 가비지 컬렉터는 1세대로 프로모션 된 객체들이 1세대 힙의 버짓을 초과하는지 판단한다.
만약 프로모션 된 객체들이 1세대 힙의 버짓을 초과하면 1세대에 대한 가비지 컬렉션, 즉 GC 1이 수행된다.
비슷한 방식으로 1세대에서 2세대로 프로모션 된 객체들이 GC 2의 버짓을 소모하면 2세대 가비지 컬렉션이 발생할 수도 있다.




★ GC.Collect 메서드 호출
GC.Collect 메서드는 매개변수로 가비지 컬렉션을 수행할 세대를 명시할 수 있는데, 0, 1, 2 값만이 현재에는 유효하다.
매개변수를 명시하지 않으면 2세대 가비지 컬렉션이 발생한다.

GC.Collect 메서드는 가비지 컬렉터가 스스로 지금 가비지 컬렉션을 수행할지 말지를 결정하도록 제어할 수도 있다
예를 들어, 다음과 같은 코드는 2세대 가비지 컬렉션을 수행할 수도 그렇지 않을 수도 있다.

GC.Collect(2, GCCollectionMode.Optimized);



★ 시스템 메모리 부족 상황
Windows 운영체제는 시스템 전체적으로 메모리가 부족하면 메모리 확보를 위해 페이지 아웃, 스와핑등 여러 가지 작업을 수행한다.
그 중 하나가 프로세스들에게 메모리 부족 상황을 알리는 것이다.
CLR은 메모리 부족 상황이 되면, 일반적인 상황보다 적극적으로 가비지 컬렉션을 수행한다.
이때는 0, 1, 2 세대 가비지 컬렉션이 보다 자주 발생할 수 있다.